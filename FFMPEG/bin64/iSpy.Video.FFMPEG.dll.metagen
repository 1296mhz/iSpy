ImageRuntimeVersion: v4.0.30319
Assembly iSpy.Video.FFMPEG, Version=3.6.4.0, Culture=neutral, PublicKeyToken=81785fde1d5460f5: 
	hash=SHA1, flags=PublicKey
Assembly mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a: 
	hash=None, flags=None
Assembly Microsoft.VisualC, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a: 
	hash=None, flags=None
Struct iSpy.Video.FFMPEG.AudioCodec: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    iSpy.Video.FFMPEG.AudioCodec WMAV1 = 3 : Public, Static, Literal, HasDefault
    iSpy.Video.FFMPEG.AudioCodec M4A = 2 : Public, Static, Literal, HasDefault
    iSpy.Video.FFMPEG.AudioCodec AAC = 1 : Public, Static, Literal, HasDefault
    iSpy.Video.FFMPEG.AudioCodec MP3 = 0 : Public, Static, Literal, HasDefault
    iSpy.Video.FFMPEG.AudioCodec None = -1 : Public, Static, Literal, HasDefault
Class iSpy.Video.FFMPEG.AudioFileReader: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    Int32 AnalyzeDuration 'get set' : 
    Int32 Timeout 'get set' : 
    Boolean IsOpen 'get ' : 
    System.String Headers 'get set' : 
    System.String UserAgent 'get set' : 
    System.String Cookies 'get set' : 
    System.String CodecName 'get ' : 
    Int32 BitsPerSample 'get ' : 
    Int32 Channels 'get ' : 
    Int32 SampleRate 'get ' : 
  Methods:
    get_SampleRate(): PrivateScope, Public, HideBySig, SpecialName
    get_Channels(): PrivateScope, Public, HideBySig, SpecialName
    get_BitsPerSample(): PrivateScope, Public, HideBySig, SpecialName
    get_CodecName(): PrivateScope, Public, HideBySig, SpecialName
    get_Cookies(): PrivateScope, Public, HideBySig, SpecialName
    set_Cookies(String): PrivateScope, Public, HideBySig, SpecialName
    get_UserAgent(): PrivateScope, Public, HideBySig, SpecialName
    set_UserAgent(String): PrivateScope, Public, HideBySig, SpecialName
    get_Headers(): PrivateScope, Public, HideBySig, SpecialName
    set_Headers(String): PrivateScope, Public, HideBySig, SpecialName
    get_IsOpen(): PrivateScope, Public, HideBySig, SpecialName
    get_Timeout(): PrivateScope, Public, HideBySig, SpecialName
    set_Timeout(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_AnalyzeDuration(): PrivateScope, Public, HideBySig, SpecialName
    set_AnalyzeDuration(Int32): PrivateScope, Public, HideBySig, SpecialName
    Open(String): PrivateScope, Public, HideBySig
    Abort(): PrivateScope, Public, HideBySig
    ReadAudioFrame(): PrivateScope, Public, HideBySig
    Close(): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class iSpy.Video.FFMPEG.AudioFileWriter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    Boolean IsOpen 'get ' : 
    iSpy.Video.FFMPEG.AudioCodec ACodec 'get ' : 
  Methods:
    get_ACodec(): PrivateScope, Public, HideBySig, SpecialName
    get_IsOpen(): PrivateScope, Public, HideBySig, SpecialName
    Open(String, AudioCodec, Int32, Int32, Int32): PrivateScope, Public, HideBySig
    Open(String): PrivateScope, Public, HideBySig
    WriteAudio(Byte*, Int32): PrivateScope, Public, HideBySig
    Close(): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class iSpy.Video.FFMPEG.IMA_ADPCM: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int16 PredictedValue : Public
    Byte StepIndex : Public
  Methods:
    EncodeInit(Int16, Int16): PrivateScope, Public, HideBySig
    EncodeFoscam(Byte*, Int32, Byte*): PrivateScope, Public, HideBySig
    Encode(Byte*, Int32, Int16*, UInt32): PrivateScope, Public, HideBySig
    Encode(Int16): PrivateScope, Public, HideBySig
    Decode(Int16*, Byte*, Int32, UInt32): PrivateScope, Public, HideBySig
    Decode(UInt32): PrivateScope, Public, HideBySig
Class iSpy.Video.FFMPEG.Init: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Initialise(): PrivateScope, Public, HideBySig
    DeInitialise(): PrivateScope, Public, HideBySig
Struct iSpy.Video.FFMPEG.VideoCodec: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    iSpy.Video.FFMPEG.VideoCodec H265 = 11 : Public, Static, Literal, HasDefault
    iSpy.Video.FFMPEG.VideoCodec MJPEG = 10 : Public, Static, Literal, HasDefault
    iSpy.Video.FFMPEG.VideoCodec H264 = 9 : Public, Static, Literal, HasDefault
    iSpy.Video.FFMPEG.VideoCodec Raw = 8 : Public, Static, Literal, HasDefault
    iSpy.Video.FFMPEG.VideoCodec MPEG2 = 7 : Public, Static, Literal, HasDefault
    iSpy.Video.FFMPEG.VideoCodec FLV1 = 6 : Public, Static, Literal, HasDefault
    iSpy.Video.FFMPEG.VideoCodec H263P = 5 : Public, Static, Literal, HasDefault
    iSpy.Video.FFMPEG.VideoCodec MSMPEG4v3 = 4 : Public, Static, Literal, HasDefault
    iSpy.Video.FFMPEG.VideoCodec MSMPEG4v2 = 3 : Public, Static, Literal, HasDefault
    iSpy.Video.FFMPEG.VideoCodec WMV2 = 2 : Public, Static, Literal, HasDefault
    iSpy.Video.FFMPEG.VideoCodec WMV1 = 1 : Public, Static, Literal, HasDefault
    iSpy.Video.FFMPEG.VideoCodec MPEG4 = 0 : Public, Static, Literal, HasDefault
    iSpy.Video.FFMPEG.VideoCodec Default = -1 : Public, Static, Literal, HasDefault
Class iSpy.Video.FFMPEG.VideoFileReader: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    Int32 Flags 'get set' : 
    Int32 AnalyzeDuration 'get set' : 
    Int32 Timeout 'get set' : 
    Boolean NoBuffer 'get set' : 
    Boolean IsOpen 'get ' : 
    Int32 RTSPMode 'get set' : 
    System.String Headers 'get set' : 
    System.String UserAgent 'get set' : 
    System.String Cookies 'get set' : 
    System.String AudioCodecName 'get ' : 
    Int32 LastFrameType 'get ' : 
    System.String CodecName 'get ' : 
    Int64 FrameCount 'get ' : 
    Int64 AudioTime 'get ' : 
    Int64 VideoTime 'get ' : 
    Int64 Duration 'get ' : 
    Int32 FrameRate 'get ' : 
    Int32 Height 'get ' : 
    Int32 Width 'get ' : 
    Int32 BitsPerSample 'get ' : 
    Int32 Channels 'get ' : 
    Int32 SampleRate 'get ' : 
  Methods:
    get_SampleRate(): PrivateScope, Public, HideBySig, SpecialName
    get_Channels(): PrivateScope, Public, HideBySig, SpecialName
    get_BitsPerSample(): PrivateScope, Public, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, HideBySig, SpecialName
    get_FrameRate(): PrivateScope, Public, HideBySig, SpecialName
    get_Duration(): PrivateScope, Public, HideBySig, SpecialName
    get_VideoTime(): PrivateScope, Public, HideBySig, SpecialName
    get_AudioTime(): PrivateScope, Public, HideBySig, SpecialName
    get_FrameCount(): PrivateScope, Public, HideBySig, SpecialName
    get_CodecName(): PrivateScope, Public, HideBySig, SpecialName
    get_LastFrameType(): PrivateScope, Public, HideBySig, SpecialName
    get_AudioCodecName(): PrivateScope, Public, HideBySig, SpecialName
    get_Cookies(): PrivateScope, Public, HideBySig, SpecialName
    set_Cookies(String): PrivateScope, Public, HideBySig, SpecialName
    get_UserAgent(): PrivateScope, Public, HideBySig, SpecialName
    set_UserAgent(String): PrivateScope, Public, HideBySig, SpecialName
    get_Headers(): PrivateScope, Public, HideBySig, SpecialName
    set_Headers(String): PrivateScope, Public, HideBySig, SpecialName
    get_RTSPMode(): PrivateScope, Public, HideBySig, SpecialName
    set_RTSPMode(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_IsOpen(): PrivateScope, Public, HideBySig, SpecialName
    get_NoBuffer(): PrivateScope, Public, HideBySig, SpecialName
    set_NoBuffer(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Timeout(): PrivateScope, Public, HideBySig, SpecialName
    set_Timeout(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_AnalyzeDuration(): PrivateScope, Public, HideBySig, SpecialName
    set_AnalyzeDuration(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Flags(): PrivateScope, Public, HideBySig, SpecialName
    set_Flags(Int32): PrivateScope, Public, HideBySig, SpecialName
    Open(String): PrivateScope, Public, HideBySig
    Seek(Int32): PrivateScope, Public, HideBySig
    Abort(): PrivateScope, Public, HideBySig
    ReadFrame(): PrivateScope, Public, HideBySig
    Close(): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class iSpy.Video.FFMPEG.VideoFileWriter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    Boolean IsOpen 'get ' : 
    iSpy.Video.FFMPEG.AudioCodec ACodec 'get ' : 
    iSpy.Video.FFMPEG.VideoCodec Codec 'get ' : 
    Int32 BitRate 'get ' : 
    Int32 Height 'get ' : 
    Int32 Width 'get ' : 
  Methods:
    get_Width(): PrivateScope, Public, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, HideBySig, SpecialName
    get_BitRate(): PrivateScope, Public, HideBySig, SpecialName
    get_Codec(): PrivateScope, Public, HideBySig, SpecialName
    get_ACodec(): PrivateScope, Public, HideBySig, SpecialName
    get_IsOpen(): PrivateScope, Public, HideBySig, SpecialName
    Open(String, Int32, Int32, VideoCodec, Int32, AudioCodec, Int32, Int32, Int32, Int32): PrivateScope, Public, HideBySig
    Open(String, Int32, Int32, VideoCodec, Int32, Int32): PrivateScope, Public, HideBySig
    Open(String, Int32, Int32, VideoCodec): PrivateScope, Public, HideBySig
    Open(String, Int32, Int32): PrivateScope, Public, HideBySig
    WriteVideoFrame(Bitmap, Int64): PrivateScope, Public, HideBySig
    WriteAudio(Byte*, Int32, Int64): PrivateScope, Public, HideBySig
    AddAudioSamples(WriterPrivateData, Byte*, Int32, Int64): PrivateScope, Public, HideBySig
    Close(): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
